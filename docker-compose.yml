version: '3'

networks:
  app-tier-tms:
    driver: bridge

services:
  tms_postgres_db:
    image: postgres:14.5
    container_name: tms_postgres_db
    restart: always
    env_file:
      - .env
    networks:
      - app-tier-tms
    ports:
      - '5440:5432'

  tms_web:
    container_name: tms_web
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ./entrypoint.sh
    restart: always
    env_file:
      - .env
    depends_on:
      - tms_postgres_db
    links:
      - tms_postgres_db
    volumes:
      - .:/app
    ports:
      - "127.0.0.1:9001:8020"
    networks:
      - app-tier-tms

  tms_redis:
    image: redis:alpine
    restart: always
    read_only: false
    container_name: tmsv2_redis
    command: redis-server --port 6390 --appendonly yes
    ports:
      - "127.0.0.1:6390:6390"
    networks:
      - app-tier-tms

  tms_celery:
    container_name: tms_celery
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    entrypoint: ./celery.sh
    env_file:
      - .env
    depends_on:
      - tms_redis
    networks:
      - app-tier-tms
    volumes:
      - .:/app

  tms_celery_flower:
    container_name: tms_celery_flower
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - tms_redis
      - tms_celery
    ports:
      - "5510:5555"
    command: celery -A tms flower --address=0.0.0.0 --port=5555 --basic_auth=monir:monir@2020
    networks:
      - app-tier-tms
